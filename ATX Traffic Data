#https://data.austintexas.gov/Transportation-and-Mobility/Real-Time-Traffic-Incident-Reports/dx9v-zd7x/data_preview

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

df = pd.read_csv('/Users/eugeniaportillo/Desktop/ATX_Traffic_Incident_Reports_20250805.csv', low_memory=False)
df.head() #loading first 5 rows

df.dtypes #understanding data types

df.info() #summary information of data (row #, non-null values & dttype of columns)

#since published date is an object, I need to convert from object to date time format
df['Published Date'] = pd.to_datetime(df['Published Date'])
print(df.dtypes)

#extracting different classifications for issues reported
unique_categories = df['Issue Reported'].unique()
print(unique_categories)

issue_count = df['Issue Reported'].value_counts()
print(issue_count)

#limit the data with low count
plt.figure()
x=df['Issue Reported'].value_counts()[0:9] #limiting the first 17 values (they have a a higher than 100 occurence count)
other_sum = sum(df['Issue Reported'].value_counts()[10:]) #summing remaining values
x.at['Other']=other_sum #adding new key value 
labels=x.index
plt.pie(x,labels=labels, autopct='%.02f%%')
plt.title('Percentage of Issues Reported', fontsize=18)
plt.show()

#load dataset
df = pd.read_csv('/Users/eugeniaportillo/Desktop/ATX_Traffic_Incident_Reports_20250805.csv', low_memory=False)

#calculate counts of each issue reported
issue_counts = df ['Issue Reported'].value_counts()

#bar chart to visualize the issue counts within entire dataset
plt.figure(figsize=(10, 6))
plt.bar(issue_counts.index, issue_counts)
plt.title('Issue Reported Counts')
plt.xlabel('Issues')
plt.xticks(rotation=45, ha='right')
plt.ylabel('Count')
plt.show()

import folium
from folium import Choropleth, Circle, Marker
from folium.plugins import HeatMap, MarkerCluster

#plotting in a map the location of accidents
m_1 = folium.Map(location=[30.2672, -97.7431], tiles='openstreetmap', zoom_start=10)

m_1 = folium.Map(location=[30.2672, -97.7431], tiles='openstreetmap', zoom_start=10)

# Plotting Function
def plotDot(point):
    folium.CircleMarker(location=[point['Latitude'],point['Longitude']], radius=2, weight=5).add_to(m_1)

data_clean = df.dropna()
for idx, row in data_clean.iterrows():
    folium.CircleMarker([row['Latitude'], row['Longitude']]).add_to(m_1)

m_1

import pandas as pd
import matplotlib as plt

#load dataset
df = pd.read_csv('/Users/eugeniaportillo/Desktop/ATX_Traffic_Incident_Reports_20250805.csv', low_memory=False)

#calculate counts of each issue reported
yr_counts = df ['Published Date'].value_counts()

#bar chart to visualize the issue counts within entire dataset
plt.figure(figsize=(10, 6))
plt.bar(yr_counts.index, yr_counts)
plt.title('Issue Reported Counts')
plt.xlabel('Issues')
plt.xticks(rotation=45, ha='right')
plt.ylabel('Count')
plt.show()

